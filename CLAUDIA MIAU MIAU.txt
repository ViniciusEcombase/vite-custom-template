import React, { useState } from 'react';
import { User, Package, Heart, Settings, ChevronRight } from 'lucide-react';

// CSS Styles for components
const styles = `
  /* UserAccount Main Component Styles */
  

  /* Navigation Sidebar Styles */
  

  /* Content Area Styles */
  

  /* MyProfile Component Styles */
  .profile-form {
    display: grid;
    gap: var(--space-6);
  }

  .profile-section {
    background-color: var(--color-gray-800);
    padding: var(--space-6);
    border-radius: var(--radius-base);
    border: var(--border-1) solid var(--color-gray-700);
  }

  .profile-section h3 {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--color-text-primary);
    margin: 0 0 var(--space-4) 0;
  }

  .form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--space-4);
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .form-label {
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--color-text-primary);
  }

  .form-input {
    padding: var(--space-3);
    background-color: var(--color-gray-700);
    border: var(--border-1) solid var(--color-gray-600);
    border-radius: var(--radius-base);
    color: var(--color-text-primary);
    font-size: var(--text-base);
    transition: var(--transition-colors);
  }

  .form-input:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(255, 122, 0, 0.1);
  }

  .form-textarea {
    min-height: 80px;
    resize: vertical;
  }

  /* MyOrders Component Styles */
  

  /* Wishlist Component Styles */
  .wishlist-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: var(--space-6);
  }

  .wishlist-item {
    background-color: var(--color-gray-800);
    border: var(--border-1) solid var(--color-gray-700);
    border-radius: var(--radius-base);
    padding: var(--space-4);
    transition: var(--transition-all);
  }

  .wishlist-item:hover {
    border-color: var(--color-primary);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .wishlist-image {
    width: 100%;
    height: 200px;
    background-color: var(--color-gray-700);
    border-radius: var(--radius-base);
    margin-bottom: var(--space-4);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-text-muted);
  }

  .wishlist-content h4 {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--color-text-primary);
    margin: 0 0 var(--space-2) 0;
  }

  .wishlist-price {
    font-size: var(--text-xl);
    font-weight: 700;
    color: var(--color-primary);
    margin-bottom: var(--space-4);
  }

  /* Settings Component Styles */
  

  /* Placeholder Button Styles - REPLACE WITH YOUR BUTTON COMPONENT */
  .btn {
    padding: var(--space-3) var(--space-6);
    border: none;
    border-radius: var(--radius-base);
    font-size: var(--text-base);
    font-weight: 500;
    cursor: pointer;
    transition: var(--transition-all);
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
  }

  .btn-primary {
    background-color: var(--color-primary);
    color: var(--color-white);
  }

  .btn-primary:hover {
    background-color: var(--color-primary-dark);
    box-shadow: var(--shadow-primary-lg);
  }

  .btn-secondary {
    background-color: var(--color-gray-700);
    color: var(--color-text-primary);
    border: var(--border-1) solid var(--color-gray-600);
  }

  .btn-secondary:hover {
    background-color: var(--color-gray-600);
  }

  .btn-danger {
    background-color: var(--color-error);
    color: var(--color-white);
  }

  .btn-danger:hover {
    background-color: var(--color-error-dark);
  }

  /* Toggle Switch - PLACEHOLDER */
  .toggle-switch {
    position: relative;
    width: 44px;
    height: 24px;
    background-color: var(--color-gray-600);
    border-radius: var(--radius-full);
    cursor: pointer;
    transition: var(--transition-colors);
  }

  .toggle-switch.active {
    background-color: var(--color-primary);
  }

  .toggle-switch::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 20px;
    height: 20px;
    background-color: var(--color-white);
    border-radius: var(--radius-full);
    transition: var(--transition-transform);
  }

  .toggle-switch.active::after {
    transform: translateX(20px);
  }
`;

// MyProfile Component


// MyOrders Component


// Wishlist Component


// Settings Component


// Main UserAccount Component
const UserAccount = () => {
  const [activeSection, setActiveSection] = useState('profile');

  const navigationItems = [
    { id: 'profile', label: 'My Profile', icon: User, component: MyProfile },
    { id: 'orders', label: 'My Orders', icon: Package, component: MyOrders },
    { id: 'wishlist', label: 'Wishlist', icon: Heart, component: Wishlist },
    { id: 'settings', label: 'Settings', icon: Settings, component: Settings }
  ];

  const ActiveComponent = navigationItems.find(item => item.id === activeSection)?.component || MyProfile;

  return (
    <>
      <style>{styles}</style>
      <div className="user-account-container">
        <header className="user-account-header">
          <div className="container">
            <h1>My Account</h1>
          </div>
        </header>
        
        <main className="user-account-content">
          <div className="user-account-layout">
            <nav className="nav-sidebar">
              <h2>Account Menu</h2>
              <ul className="nav-menu">
                {navigationItems.map(item => {
                  const IconComponent = item.icon;
                  return (
                    <li key={item.id} className="nav-menu-item">
                      <button
                        className={`nav-menu-button ${activeSection === item.id ? 'active' : ''}`}
                        onClick={() => setActiveSection(item.id)}
                      >
                        <IconComponent className="icon" />
                        <span>{item.label}</span>
                        <ChevronRight className="icon" style={{ marginLeft: 'auto', opacity: 0.5 }} />
                      </button>
                    </li>
                  );
                })}
              </ul>
            </nav>
            
            <div className="content-container">
              <ActiveComponent />
            </div>
          </div>
        </main>
      </div>
    </>
  );
};

export default UserAccount;